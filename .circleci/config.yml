# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:19.0.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "4b:c9:02:a6:e8:59:47:22:f9:af:d0:99:af:3e:10:46"
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: test
          command: mvn test
      
      - run: 
          name: fast-forward
          command: |
            git reset --hard HEAD^
            git config --global user.email "simon.laurent@epsi.fr"
            git config --global user.name "babaygo"
            git checkout main
            git merge dev
            git commit -m "ON SUCCESS"
            git push --set-upstream origin main
          when: on_success

      - run: 
          name: rejected
          command: |
            git config --global user.email "simon.laurent@epsi.fr"
            git config --global user.name "babaygo"
            git checkout -b rejected_${CIRCLE_BUILD_NUM}
            git add .
            git commit -m "ON FAIL"
            git push --set-upstream origin rejected_${CIRCLE_BUILD_NUM}
            git merge rejected_${CIRCLE_BUILD_NUM}
          when: on_fail
          

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
